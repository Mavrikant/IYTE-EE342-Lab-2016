/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 10.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 100.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DioExt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("DioExt[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("RnW1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DioExt[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Reg8bit:R1|FFstore")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Reg8bit:R1|FFstore[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R1|FFstore[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R1|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Reg8bit:R2|FFstore[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R2|FFstore[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R2|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Reg8bit:R3|FFstore[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Reg8bit:R3|FFstore[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Reg8bit:R3|FFstore";
}

SIGNAL("Dbuss[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Dbuss[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Dbuss[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Dbuss[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Dbuss[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Dbuss[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Dbuss[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Dbuss[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RnW4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Accumulator:Ac|FFstore")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Accumulator:Ac|FFstore[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Accumulator:Ac|FFstore";
}

SIGNAL("Accumulator:Ac|FFstore[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Accumulator:Ac|FFstore";
}

SIGNAL("Accumulator:Ac|FFstore[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Accumulator:Ac|FFstore";
}

SIGNAL("Accumulator:Ac|FFstore[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Accumulator:Ac|FFstore";
}

SIGNAL("Accumulator:Ac|FFstore[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Accumulator:Ac|FFstore";
}

SIGNAL("Accumulator:Ac|FFstore[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Accumulator:Ac|FFstore";
}

SIGNAL("Accumulator:Ac|FFstore[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Accumulator:Ac|FFstore";
}

SIGNAL("Accumulator:Ac|FFstore[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Accumulator:Ac|FFstore";
}

GROUP("DioExtOut")
{
	MEMBERS = "DioExt[0]~result", "DioExt[1]~result", "DioExt[2]~result", "DioExt[3]~result", "DioExt[4]~result", "DioExt[5]~result", "DioExt[6]~result", "DioExt[7]~result";
}

GROUP("Dbuss")
{
	MEMBERS = "Dbuss[0]", "Dbuss[1]", "Dbuss[2]", "Dbuss[3]", "Dbuss[4]", "Dbuss[5]", "Dbuss[6]", "Dbuss[7]";
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("DioExt[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 700.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL Z FOR 700.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 700.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 700.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL Z FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL Z FOR 700.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 700.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("RnW1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 398.914;
		LEVEL 1 FOR 99.768;
		LEVEL 0 FOR 8701.318;
	}
}

TRANSITION_LIST("RnW2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 9700.0;
	}
}

TRANSITION_LIST("RnW3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 9100.0;
	}
}

TRANSITION_LIST("Sel1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.605;
		LEVEL 1 FOR 99.768;
		LEVEL 0 FOR 8699.627;
	}
}

TRANSITION_LIST("Sel2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 9000.0;
	}
}

TRANSITION_LIST("Sel3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 8900.0;
	}
}

TRANSITION_LIST("DioExt[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 14.663;
		LEVEL X FOR 0.691;
		LEVEL Z FOR 0.589;
		LEVEL 1 FOR 0.524;
		LEVEL X FOR 0.264;
		LEVEL 1 FOR 96.986;
		LEVEL 0 FOR 98.89;
		LEVEL Z FOR 2.0;
		LEVEL 1 FOR 199.11;
		LEVEL 0 FOR 198.89;
		LEVEL Z FOR 3.072;
		LEVEL 0 FOR 184.321;
		LEVEL Z FOR 15.268;
		LEVEL X FOR 0.363;
		LEVEL 0 FOR 184.369;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 12.954;
		LEVEL X FOR 1.3;
		LEVEL 0 FOR 85.746;
		LEVEL 1 FOR 13.327;
		LEVEL X FOR 0.747;
		LEVEL 1 FOR 185.926;
		LEVEL Z FOR 14.082;
		LEVEL X FOR 0.58;
		LEVEL 0 FOR 0.111;
		LEVEL Z FOR 0.589;
		LEVEL 0 FOR 99.3;
		LEVEL 1 FOR 97.364;
		LEVEL Z FOR 2.0;
		LEVEL 1 FOR 100.636;
		LEVEL 0 FOR 1.625;
		LEVEL 1 FOR 295.739;
		LEVEL Z FOR 3.072;
		LEVEL 1 FOR 84.902;
		LEVEL X FOR 13.701;
		LEVEL 0 FOR 86.299;
		LEVEL Z FOR 14.687;
		LEVEL X FOR 0.551;
		LEVEL 0 FOR 184.762;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 12.772;
		LEVEL X FOR 1.3;
		LEVEL 0 FOR 285.928;
		LEVEL Z FOR 13.9;
		LEVEL X FOR 0.691;
		LEVEL Z FOR 0.405;
		LEVEL 0 FOR 196.848;
		LEVEL Z FOR 1.881;
		LEVEL 1 FOR 3.046;
		LEVEL 0 FOR 395.073;
		LEVEL Z FOR 3.072;
		LEVEL 0 FOR 0.919;
		LEVEL 1 FOR 0.936;
		LEVEL 0 FOR 83.229;
		LEVEL X FOR 13.519;
		LEVEL 1 FOR 86.481;
		LEVEL Z FOR 14.505;
		LEVEL X FOR 0.919;
		LEVEL 1 FOR 0.215;
		LEVEL 0 FOR 184.361;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 13.012;
		LEVEL X FOR 1.3;
		LEVEL 0 FOR 285.688;
		LEVEL Z FOR 14.14;
		LEVEL X FOR 0.435;
		LEVEL 0 FOR 0.256;
		LEVEL Z FOR 0.589;
		LEVEL 0 FOR 196.664;
		LEVEL Z FOR 2.0;
		LEVEL 1 FOR 2.267;
		LEVEL 0 FOR 395.733;
		LEVEL Z FOR 3.072;
		LEVEL 0 FOR 0.7;
		LEVEL 1 FOR 0.495;
		LEVEL 0 FOR 183.649;
		LEVEL Z FOR 14.745;
		LEVEL X FOR 0.7;
		LEVEL 1 FOR 43.643;
		LEVEL 0 FOR 40.912;
		LEVEL X FOR 13.509;
		LEVEL 1 FOR 86.491;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 13.639;
		LEVEL X FOR 0.691;
		LEVEL Z FOR 0.535;
		LEVEL 1 FOR 1.016;
		LEVEL X FOR 0.264;
		LEVEL 1 FOR 98.386;
		LEVEL 0 FOR 97.052;
		LEVEL Z FOR 2.0;
		LEVEL 0 FOR 0.948;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 197.052;
		LEVEL Z FOR 3.072;
		LEVEL 0 FOR 1.226;
		LEVEL 1 FOR 0.593;
		LEVEL 0 FOR 183.526;
		LEVEL Z FOR 14.244;
		LEVEL X FOR 1.226;
		LEVEL 1 FOR 0.478;
		LEVEL 0 FOR 184.052;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 12.985;
		LEVEL X FOR 1.26;
		LEVEL 0 FOR 85.755;
		LEVEL 1 FOR 13.558;
		LEVEL X FOR 0.547;
		LEVEL 1 FOR 185.895;
		LEVEL Z FOR 14.113;
		LEVEL X FOR 0.132;
		LEVEL 0 FOR 0.559;
		LEVEL Z FOR 0.589;
		LEVEL 0 FOR 98.852;
		LEVEL 1 FOR 97.812;
		LEVEL Z FOR 2.0;
		LEVEL 1 FOR 100.188;
		LEVEL 0 FOR 1.625;
		LEVEL 1 FOR 296.187;
		LEVEL Z FOR 3.072;
		LEVEL 1 FOR 84.871;
		LEVEL X FOR 13.732;
		LEVEL 0 FOR 86.268;
		LEVEL Z FOR 14.718;
		LEVEL X FOR 0.279;
		LEVEL 1 FOR 0.605;
		LEVEL 0 FOR 184.398;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 12.962;
		LEVEL X FOR 0.798;
		LEVEL 0 FOR 286.24;
		LEVEL Z FOR 14.09;
		LEVEL 0 FOR 0.691;
		LEVEL Z FOR 0.589;
		LEVEL 0 FOR 196.664;
		LEVEL Z FOR 2.0;
		LEVEL 1 FOR 0.437;
		LEVEL 0 FOR 397.563;
		LEVEL Z FOR 3.072;
		LEVEL 0 FOR 84.894;
		LEVEL X FOR 13.709;
		LEVEL 1 FOR 86.291;
		LEVEL Z FOR 14.695;
		LEVEL X FOR 0.231;
		LEVEL 0 FOR 185.074;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("DioExt[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 100.0;
		LEVEL 0 FOR 13.134;
		LEVEL X FOR 1.028;
		LEVEL 0 FOR 99.452;
		LEVEL X FOR 0.35;
		LEVEL 0 FOR 186.036;
		LEVEL Z FOR 14.162;
		LEVEL 0 FOR 0.791;
		LEVEL Z FOR 0.589;
		LEVEL 0 FOR 196.664;
		LEVEL Z FOR 1.758;
		LEVEL 1 FOR 0.908;
		LEVEL 0 FOR 397.334;
		LEVEL Z FOR 3.072;
		LEVEL 0 FOR 184.722;
		LEVEL Z FOR 14.867;
		LEVEL X FOR 0.236;
		LEVEL 1 FOR 44.02;
		LEVEL 0 FOR 40.877;
		LEVEL X FOR 13.631;
		LEVEL 1 FOR 86.369;
		LEVEL Z FOR 8600.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1253.006;
		LEVEL 1 FOR 8746.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 753.006;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 8746.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 153.006;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 8746.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1253.006;
		LEVEL 1 FOR 8746.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 753.006;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 8746.994;
	}
}

TRANSITION_LIST("Reg8bit:R1|FFstore[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 153.006;
		LEVEL 1 FOR 1100.0;
		LEVEL 0 FOR 8746.994;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.006;
		LEVEL 1 FOR 9746.994;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 253.006;
		LEVEL 1 FOR 9746.994;
	}
}

TRANSITION_LIST("Reg8bit:R2|FFstore[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 353.006;
		LEVEL 1 FOR 9646.994;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 353.006;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 9146.994;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 353.006;
		LEVEL 1 FOR 9646.994;
	}
}

TRANSITION_LIST("Reg8bit:R3|FFstore[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 353.006;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 9146.994;
	}
}

TRANSITION_LIST("Dbuss[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.428;
		LEVEL 1 FOR 1.3;
		LEVEL Z FOR 1.123;
		LEVEL 0 FOR 1.625;
		LEVEL 1 FOR 94.986;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 4.045;
		LEVEL 0 FOR 0.862;
		LEVEL 1 FOR 95.093;
		LEVEL X FOR 3.45;
		LEVEL 1 FOR 1.016;
		LEVEL X FOR 0.264;
		LEVEL 1 FOR 96.986;
		LEVEL 0 FOR 98.321;
		LEVEL Z FOR 2.006;
		LEVEL 1 FOR 199.673;
		LEVEL 0 FOR 198.321;
		LEVEL Z FOR 1.176;
		LEVEL 0 FOR 0.503;
		LEVEL 1 FOR 0.85;
		LEVEL 0 FOR 99.152;
		LEVEL Z FOR 1.395;
		LEVEL 0 FOR 0.932;
		LEVEL 1 FOR 0.421;
		LEVEL 0 FOR 95.534;
		LEVEL X FOR 3.63;
		LEVEL 0 FOR 97.832;
		LEVEL Z FOR 1.008;
		LEVEL 0 FOR 97.53;
		LEVEL X FOR 0.595;
		LEVEL Z FOR 8586.943;
	}
}

TRANSITION_LIST("Dbuss[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 112.916;
		LEVEL 1 FOR 1.3;
		LEVEL Z FOR 1.338;
		LEVEL 0 FOR 0.733;
		LEVEL 1 FOR 0.846;
		LEVEL 0 FOR 7.081;
		LEVEL X FOR 1.3;
		LEVEL 0 FOR 85.746;
		LEVEL 1 FOR 2.067;
		LEVEL 0 FOR 2.928;
		LEVEL 1 FOR 8.332;
		LEVEL X FOR 0.747;
		LEVEL 1 FOR 91.103;
		LEVEL 0 FOR 0.862;
		LEVEL 1 FOR 93.961;
		LEVEL X FOR 3.402;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 97.325;
		LEVEL Z FOR 2.006;
		LEVEL 1 FOR 100.669;
		LEVEL 0 FOR 1.625;
		LEVEL 1 FOR 295.7;
		LEVEL Z FOR 1.176;
		LEVEL 1 FOR 100.505;
		LEVEL Z FOR 1.395;
		LEVEL 1 FOR 1.579;
		LEVEL X FOR 8.319;
		LEVEL 0 FOR 86.299;
		LEVEL X FOR 3.978;
		LEVEL 0 FOR 98.174;
		LEVEL Z FOR 1.008;
		LEVEL 0 FOR 0.615;
		LEVEL 1 FOR 0.964;
		LEVEL 0 FOR 95.261;
		LEVEL X FOR 1.285;
		LEVEL Z FOR 8587.455;
	}
}

TRANSITION_LIST("Dbuss[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.148;
		LEVEL 1 FOR 1.3;
		LEVEL Z FOR 1.338;
		LEVEL 0 FOR 9.195;
		LEVEL X FOR 1.3;
		LEVEL 0 FOR 285.928;
		LEVEL X FOR 2.927;
		LEVEL 1 FOR 0.177;
		LEVEL 0 FOR 196.906;
		LEVEL Z FOR 1.823;
		LEVEL 1 FOR 3.046;
		LEVEL 0 FOR 395.131;
		LEVEL Z FOR 1.176;
		LEVEL 0 FOR 0.647;
		LEVEL 1 FOR 0.21;
		LEVEL 0 FOR 1.9;
		LEVEL 1 FOR 0.936;
		LEVEL 0 FOR 96.812;
		LEVEL Z FOR 1.395;
		LEVEL 0 FOR 1.793;
		LEVEL X FOR 8.64;
		LEVEL 1 FOR 86.481;
		LEVEL X FOR 3.532;
		LEVEL 1 FOR 0.215;
		LEVEL 0 FOR 97.688;
		LEVEL Z FOR 1.008;
		LEVEL 0 FOR 97.557;
		LEVEL X FOR 0.568;
		LEVEL Z FOR 8587.223;
	}
}

TRANSITION_LIST("Dbuss[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.426;
		LEVEL 1 FOR 1.211;
		LEVEL 0 FOR 0.089;
		LEVEL Z FOR 1.338;
		LEVEL 0 FOR 8.287;
		LEVEL X FOR 1.3;
		LEVEL 0 FOR 285.688;
		LEVEL X FOR 3.298;
		LEVEL 0 FOR 197.86;
		LEVEL Z FOR 2.006;
		LEVEL 1 FOR 1.91;
		LEVEL 0 FOR 396.084;
		LEVEL Z FOR 0.981;
		LEVEL 1 FOR 0.54;
		LEVEL 0 FOR 1.9;
		LEVEL 1 FOR 0.495;
		LEVEL 0 FOR 97.765;
		LEVEL Z FOR 1.395;
		LEVEL 0 FOR 95.766;
		LEVEL X FOR 4.168;
		LEVEL 1 FOR 43.643;
		LEVEL 0 FOR 54.772;
		LEVEL Z FOR 1.008;
		LEVEL 0 FOR 0.228;
		LEVEL X FOR 9.69;
		LEVEL 1 FOR 86.491;
		LEVEL X FOR 1.716;
		LEVEL Z FOR 8586.945;
	}
}

TRANSITION_LIST("Dbuss[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.148;
		LEVEL 1 FOR 1.3;
		LEVEL Z FOR 1.338;
		LEVEL 1 FOR 0.189;
		LEVEL 0 FOR 1.625;
		LEVEL 1 FOR 95.12;
		LEVEL 0 FOR 2.538;
		LEVEL 1 FOR 0.55;
		LEVEL 0 FOR 96.912;
		LEVEL 1 FOR 5.031;
		LEVEL 0 FOR 0.862;
		LEVEL 1 FOR 94.107;
		LEVEL X FOR 3.422;
		LEVEL 1 FOR 1.016;
		LEVEL X FOR 0.264;
		LEVEL 1 FOR 98.386;
		LEVEL 0 FOR 96.411;
		LEVEL Z FOR 2.006;
		LEVEL 0 FOR 1.583;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 196.411;
		LEVEL Z FOR 1.176;
		LEVEL 0 FOR 3.763;
		LEVEL 1 FOR 0.593;
		LEVEL 0 FOR 96.149;
		LEVEL Z FOR 1.395;
		LEVEL 0 FOR 97.425;
		LEVEL X FOR 4.027;
		LEVEL 1 FOR 0.478;
		LEVEL 0 FOR 96.419;
		LEVEL Z FOR 1.008;
		LEVEL 0 FOR 98.068;
		LEVEL X FOR 0.057;
		LEVEL Z FOR 8587.223;
	}
}

TRANSITION_LIST("Dbuss[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 112.961;
		LEVEL 1 FOR 1.3;
		LEVEL Z FOR 1.338;
		LEVEL 0 FOR 8.124;
		LEVEL X FOR 1.26;
		LEVEL 0 FOR 85.755;
		LEVEL 1 FOR 3.287;
		LEVEL 0 FOR 2.928;
		LEVEL 1 FOR 7.343;
		LEVEL X FOR 0.547;
		LEVEL 1 FOR 91.647;
		LEVEL 0 FOR 0.862;
		LEVEL 1 FOR 93.386;
		LEVEL X FOR 3.974;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 97.32;
		LEVEL Z FOR 2.006;
		LEVEL 1 FOR 100.674;
		LEVEL 0 FOR 1.625;
		LEVEL 1 FOR 295.695;
		LEVEL Z FOR 1.176;
		LEVEL 1 FOR 100.505;
		LEVEL Z FOR 1.395;
		LEVEL 1 FOR 0.767;
		LEVEL X FOR 8.595;
		LEVEL 0 FOR 86.268;
		LEVEL X FOR 4.726;
		LEVEL 1 FOR 0.605;
		LEVEL 0 FOR 97.388;
		LEVEL Z FOR 1.008;
		LEVEL 0 FOR 96.273;
		LEVEL X FOR 1.852;
		LEVEL Z FOR 8587.41;
	}
}

TRANSITION_LIST("Dbuss[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 112.92;
		LEVEL 1 FOR 0.836;
		LEVEL 0 FOR 0.464;
		LEVEL Z FOR 1.161;
		LEVEL 1 FOR 1.401;
		LEVEL 0 FOR 7.635;
		LEVEL X FOR 0.798;
		LEVEL 0 FOR 286.24;
		LEVEL X FOR 2.301;
		LEVEL 0 FOR 198.235;
		LEVEL Z FOR 2.006;
		LEVEL 1 FOR 0.47;
		LEVEL 0 FOR 397.524;
		LEVEL Z FOR 1.176;
		LEVEL 0 FOR 0.343;
		LEVEL 1 FOR 0.957;
		LEVEL 0 FOR 99.205;
		LEVEL Z FOR 1.395;
		LEVEL 1 FOR 1.224;
		LEVEL X FOR 8.873;
		LEVEL 1 FOR 86.291;
		LEVEL X FOR 3.467;
		LEVEL 0 FOR 98.494;
		LEVEL Z FOR 1.008;
		LEVEL 0 FOR 0.266;
		LEVEL 1 FOR 0.958;
		LEVEL 0 FOR 95.807;
		LEVEL X FOR 1.094;
		LEVEL Z FOR 8587.451;
	}
}

TRANSITION_LIST("Dbuss[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.457;
		LEVEL 1 FOR 1.3;
		LEVEL Z FOR 1.338;
		LEVEL 0 FOR 0.302;
		LEVEL 1 FOR 0.218;
		LEVEL 0 FOR 8.942;
		LEVEL X FOR 1.028;
		LEVEL 0 FOR 87.639;
		LEVEL 1 FOR 0.35;
		LEVEL 0 FOR 11.463;
		LEVEL X FOR 0.35;
		LEVEL 0 FOR 186.036;
		LEVEL X FOR 2.349;
		LEVEL 0 FOR 197.756;
		LEVEL Z FOR 2.006;
		LEVEL 0 FOR 0.04;
		LEVEL 1 FOR 0.908;
		LEVEL 0 FOR 397.046;
		LEVEL Z FOR 1.176;
		LEVEL 0 FOR 100.505;
		LEVEL Z FOR 1.273;
		LEVEL 1 FOR 0.642;
		LEVEL 0 FOR 96.299;
		LEVEL X FOR 3.29;
		LEVEL 1 FOR 44.02;
		LEVEL 0 FOR 54.22;
		LEVEL Z FOR 1.008;
		LEVEL 0 FOR 0.793;
		LEVEL X FOR 10.3;
		LEVEL 1 FOR 86.369;
		LEVEL X FOR 0.663;
		LEVEL Z FOR 8586.914;
	}
}

TRANSITION_LIST("RnW4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1200.605;
		LEVEL 1 FOR 99.768;
		LEVEL 0 FOR 8699.627;
	}
}

TRANSITION_LIST("Sel4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 8600.0;
	}
}

TRANSITION_LIST("Accumulator:Ac|FFstore[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1153.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 8646.994;
	}
}

TRANSITION_LIST("Accumulator:Ac|FFstore[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1053.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 8846.994;
	}
}

TRANSITION_LIST("Accumulator:Ac|FFstore[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 953.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 8946.994;
	}
}

TRANSITION_LIST("Accumulator:Ac|FFstore[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("Accumulator:Ac|FFstore[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1153.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 8646.994;
	}
}

TRANSITION_LIST("Accumulator:Ac|FFstore[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1053.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 8846.994;
	}
}

TRANSITION_LIST("Accumulator:Ac|FFstore[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 953.006;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 8946.994;
	}
}

TRANSITION_LIST("Accumulator:Ac|FFstore[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "RnW1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DioExtOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FFstore[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FFstore[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FFstore[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Ac|FFstore";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
	CHILDREN = 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Ac|FFstore[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Ac|FFstore[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Ac|FFstore[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Ac|FFstore[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Ac|FFstore[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Ac|FFstore[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Ac|FFstore[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Accumulator:Ac|FFstore[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Dbuss";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
	CHILDREN = 64, 65, 66, 67, 68, 69, 70, 71;
}

DISPLAY_LINE
{
	CHANNEL = "Dbuss[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Dbuss[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Dbuss[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Dbuss[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Dbuss[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Dbuss[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Dbuss[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "Dbuss[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 63;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
